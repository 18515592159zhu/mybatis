<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.IUserDao">

    <!--
        建立 User 实体和数据库表的对应关系
            type 属性：指定实体类的全限定类名
            id 属性：给定一个唯一标识，是给查询 select 标签引用用的。
    -->
    <!--<resultMap id="userMap" type="com.itheima.domain.User">
        <id column="id" property="userId"/>
        <result column="username" property="userName"/>
        <result column="sex" property="userSex"/>
        <result column="address" property="userAddress"/>
        <result column="birthday" property="userBirthday"/>
    </resultMap>-->

    <!--查询所有用户-->
    <select id="findAll" resultType="com.itheima.domain.User">
        <!--select id as userId,username as userName,birthday as userBirthday,sex as userSex,address as userAddress from user-->
        select * from user
    </select>
    <!--查询所有用户-->
    <!--<select id="findAll" resultMap="userMap">
        select * from user
    </select>-->
    <!--根据id查询-->
    <select id="findById" parameterType="int" resultType="com.itheima.domain.User">
        select * from user where id=#{id}
    </select>
    <!--保存用户操作-->
    <insert id="saveUser" parameterType="com.itheima.domain.User">
        <!--配置插入操作后，获取插入数据的id-->
        <selectKey keyColumn="id" keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into user(username,birthday,sex,address)values(#{username},#{birthday},#{sex},#{address})
    </insert>
    <!--更新用户-->
    <update id="updateUser" parameterType="com.itheima.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>
    <!--根据id删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{id}
    </delete>
    <!--根据名称模糊查询-->
    <select id="findByName" parameterType="java.lang.String" resultType="com.itheima.domain.User">
        select * from user where username like #{username}
        <!--select * from user where username like '%${value}%'-->
    </select>
    <!--查询总记录条数-->
    <select id="findTotal" resultType="java.lang.Integer">
        select count(*) from user
    </select>
    <!--根据queryVo的条件查询用户 根据用户名称模糊查询，参数变成一个 QueryVo 对象了-->
    <select id="findUserByVo" parameterType="com.itheima.domain.QueryVo" resultType="com.itheima.domain.User">
        select * from user where username like #{user.username}
    </select>
</mapper>